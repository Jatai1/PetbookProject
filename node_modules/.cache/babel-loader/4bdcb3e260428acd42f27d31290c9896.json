{"ast":null,"code":"import _slicedToArray from\"/Users/jasonluu/Documents/PetbookProject/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import axios from'axios';import{setUserSession}from'./service/AuthService';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var loginAPIUrl='https://sulvxenm35.execute-api.us-east-1.amazonaws.com/prod/login';var Login=function Login(props){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),username=_useState2[0],setUsername=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),errorMessage=_useState6[0],setErrorMessage=_useState6[1];var submitHandler=function submitHandler(event){event.preventDefault();if(username.trim()===''||password.trim()===''){setErrorMessage('Both username and password are required');return;}setErrorMessage(null);var requestConfig={headers:{'x-api-key':'vi1NR9HaKJZKkcyZGw8Dg1VkCqO5ka2k2tyvTO80'}};var requestBody={username:username,password:password};axios.post(loginAPIUrl,requestBody,requestConfig).then(function(response){setUserSession(response.data.user,response.data.token);props.history.push('/Browse-Pet');}).catch(function(error){if(error.response.status===401||error.response.status===403){setErrorMessage(error.response.data.message);}else{setErrorMessage('sorry....the backend server is down. please try again later!!');}});};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:submitHandler,children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Login\"}),\"username: \",/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:username,onChange:function onChange(event){return setUsername(event.target.value);}}),\" \",/*#__PURE__*/_jsx(\"br\",{}),\"password: \",/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:password,onChange:function onChange(event){return setPassword(event.target.value);}}),\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\",value:\"Login\"})]}),errorMessage&&/*#__PURE__*/_jsx(\"p\",{className:\"message\",children:errorMessage})]});};export default Login;","map":{"version":3,"sources":["/Users/jasonluu/Documents/PetbookProject/src/Login.js"],"names":["React","useState","axios","setUserSession","loginAPIUrl","Login","props","username","setUsername","password","setPassword","errorMessage","setErrorMessage","submitHandler","event","preventDefault","trim","requestConfig","headers","requestBody","post","then","response","data","user","token","history","push","catch","error","status","message","target","value"],"mappings":"8HAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,cAAT,KAA+B,uBAA/B,C,wFACA,GAAMC,CAAAA,WAAW,CAAG,mEAApB,CAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,KAAD,CAAW,CACvB,cAAgCL,QAAQ,CAAC,EAAD,CAAxC,wCAAOM,QAAP,eAAiBC,WAAjB,eACA,eAAgCP,QAAQ,CAAC,EAAD,CAAxC,yCAAOQ,QAAP,eAAiBC,WAAjB,eACA,eAAwCT,QAAQ,CAAC,IAAD,CAAhD,yCAAOU,YAAP,eAAqBC,eAArB,eAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAAW,CAC/BA,KAAK,CAACC,cAAN,GACA,GAAIR,QAAQ,CAACS,IAAT,KAAoB,EAApB,EAA0BP,QAAQ,CAACO,IAAT,KAAoB,EAAlD,CAAsD,CACpDJ,eAAe,CAAC,yCAAD,CAAf,CACA,OACD,CACDA,eAAe,CAAC,IAAD,CAAf,CACA,GAAMK,CAAAA,aAAa,CAAG,CACpBC,OAAO,CAAE,CACP,YAAa,0CADN,CADW,CAAtB,CAMA,GAAMC,CAAAA,WAAW,CAAG,CAClBZ,QAAQ,CAAEA,QADQ,CAElBE,QAAQ,CAAEA,QAFQ,CAApB,CAKAP,KAAK,CAACkB,IAAN,CAAWhB,WAAX,CAAwBe,WAAxB,CAAqCF,aAArC,EAAoDI,IAApD,CAAyD,SAACC,QAAD,CAAc,CACrEnB,cAAc,CAACmB,QAAQ,CAACC,IAAT,CAAcC,IAAf,CAAqBF,QAAQ,CAACC,IAAT,CAAcE,KAAnC,CAAd,CACAnB,KAAK,CAACoB,OAAN,CAAcC,IAAd,CAAmB,aAAnB,EACD,CAHD,EAGGC,KAHH,CAGS,SAACC,KAAD,CAAW,CAClB,GAAIA,KAAK,CAACP,QAAN,CAAeQ,MAAf,GAA0B,GAA1B,EAAiCD,KAAK,CAACP,QAAN,CAAeQ,MAAf,GAA0B,GAA/D,CAAoE,CAClElB,eAAe,CAACiB,KAAK,CAACP,QAAN,CAAeC,IAAf,CAAoBQ,OAArB,CAAf,CACD,CAFD,IAEO,CACLnB,eAAe,CAAC,+DAAD,CAAf,CACD,CACF,CATD,EAUD,CA5BD,CA8BA,mBACE,oCACE,cAAM,QAAQ,CAAEC,aAAhB,wBACE,6BADF,2BAEY,cAAO,IAAI,CAAC,MAAZ,CAAmB,KAAK,CAAEN,QAA1B,CAAoC,QAAQ,CAAE,kBAAAO,KAAK,QAAIN,CAAAA,WAAW,CAACM,KAAK,CAACkB,MAAN,CAAaC,KAAd,CAAf,EAAnD,EAFZ,kBAEuG,aAFvG,2BAGY,cAAO,IAAI,CAAC,UAAZ,CAAuB,KAAK,CAAExB,QAA9B,CAAwC,QAAQ,CAAE,kBAAAK,KAAK,QAAIJ,CAAAA,WAAW,CAACI,KAAK,CAACkB,MAAN,CAAaC,KAAd,CAAf,EAAvD,EAHZ,kBAG2G,aAH3G,cAIE,cAAO,IAAI,CAAC,QAAZ,CAAqB,KAAK,CAAC,OAA3B,EAJF,GADF,CAOGtB,YAAY,eAAI,UAAG,SAAS,CAAC,SAAb,UAAwBA,YAAxB,EAPnB,GADF,CAWD,CA9CD,CAgDA,cAAeN,CAAAA,KAAf","sourcesContent":["import React, {useState} from 'react';\nimport axios from 'axios';\nimport { setUserSession } from './service/AuthService'\nconst loginAPIUrl = 'https://sulvxenm35.execute-api.us-east-1.amazonaws.com/prod/login';\n\nconst Login = (props) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    if (username.trim() === '' || password.trim() === '') {\n      setErrorMessage('Both username and password are required');\n      return;\n    }\n    setErrorMessage(null);\n    const requestConfig = {\n      headers: {\n        'x-api-key': 'vi1NR9HaKJZKkcyZGw8Dg1VkCqO5ka2k2tyvTO80'\n      }\n    }\n    \n    const requestBody = {\n      username: username,\n      password: password\n    }\n\n    axios.post(loginAPIUrl, requestBody, requestConfig).then((response) => {\n      setUserSession(response.data.user, response.data.token);\n      props.history.push('/Browse-Pet');\n    }).catch((error) => {\n      if (error.response.status === 401 || error.response.status === 403) {\n        setErrorMessage(error.response.data.message);\n      } else {\n        setErrorMessage('sorry....the backend server is down. please try again later!!');\n      }\n    })\n  }\n\n  return (\n    <div>\n      <form onSubmit={submitHandler}>\n        <h5>Login</h5>\n        username: <input type=\"text\" value={username} onChange={event => setUsername(event.target.value)} /> <br/>\n        password: <input type=\"password\" value={password} onChange={event => setPassword(event.target.value)} /> <br/>\n        <input type=\"submit\" value=\"Login\" />\n      </form>\n      {errorMessage && <p className=\"message\">{errorMessage}</p>}\n    </div>\n  )\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}