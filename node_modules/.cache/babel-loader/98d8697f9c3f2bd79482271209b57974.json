{"ast":null,"code":"var _jsxFileName = \"/Users/jasonluu/Documents/PetbookProject/src/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { setUserSession } from './service/AuthService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst loginAPIUrl = 'https://sulvxenm35.execute-api.us-east-1.amazonaws.com/prod/login';\n\nconst Login = props => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (username.trim() === '' || password.trim() === '') {\n      setErrorMessage('Both username and password are required');\n      return;\n    }\n\n    setErrorMessage(null);\n    const requestConfig = {\n      headers: {\n        'x-api-key': 'vi1NR9HaKJZKkcyZGw8Dg1VkCqO5ka2k2tyvTO80'\n      }\n    };\n    const requestBody = {\n      username: username,\n      password: password\n    };\n    axios.post(loginAPIUrl, requestBody, requestConfig).then(response => {\n      setUserSession(response.data.user, response.data.token);\n      props.history.push('/Browse-Pet');\n    }).catch(error => {\n      if (error.response.status === 401 || error.response.status === 403) {\n        setErrorMessage(error.response.data.message);\n      } else {\n        setErrorMessage('sorry....the backend server is down. please try again later!!');\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), \"username: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: event => setUsername(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 19\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 110\n      }, this), \"password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: event => setPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 19\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 114\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"ZoA7LYtb8kO1B5k4NigckvJEwUU=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/jasonluu/Documents/PetbookProject/src/Login.js"],"names":["React","useState","axios","setUserSession","loginAPIUrl","Login","props","username","setUsername","password","setPassword","errorMessage","setErrorMessage","submitHandler","event","preventDefault","trim","requestConfig","headers","requestBody","post","then","response","data","user","token","history","push","catch","error","status","message","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport axios from 'axios';\nimport { setUserSession } from './service/AuthService'\nconst loginAPIUrl = 'https://sulvxenm35.execute-api.us-east-1.amazonaws.com/prod/login';\n\nconst Login = (props) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    if (username.trim() === '' || password.trim() === '') {\n      setErrorMessage('Both username and password are required');\n      return;\n    }\n    setErrorMessage(null);\n    const requestConfig = {\n      headers: {\n        'x-api-key': 'vi1NR9HaKJZKkcyZGw8Dg1VkCqO5ka2k2tyvTO80'\n      }\n    }\n    \n    const requestBody = {\n      username: username,\n      password: password\n    }\n\n    axios.post(loginAPIUrl, requestBody, requestConfig).then((response) => {\n      setUserSession(response.data.user, response.data.token);\n      props.history.push('/Browse-Pet');\n    }).catch((error) => {\n      if (error.response.status === 401 || error.response.status === 403) {\n        setErrorMessage(error.response.data.message);\n      } else {\n        setErrorMessage('sorry....the backend server is down. please try again later!!');\n      }\n    })\n  }\n\n  return (\n    <div>\n      <form onSubmit={submitHandler}>\n        <h5>Login</h5>\n        username: <input type=\"text\" value={username} onChange={event => setUsername(event.target.value)} /> <br/>\n        password: <input type=\"password\" value={password} onChange={event => setPassword(event.target.value)} /> <br/>\n        <input type=\"submit\" value=\"Login\" />\n      </form>\n      {errorMessage && <p className=\"message\">{errorMessage}</p>}\n    </div>\n  )\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}